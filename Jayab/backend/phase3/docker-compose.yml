version: '3.8'
services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  user-service:
    build: ./user-service
    ports:
      - "8001:8001"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  villa-service:
    build: ./villa-service
    ports:
      - "8002:8002"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
      - MINIO_HOST=minio:9000
      - EXTERNAL_MINIO_HOST=localhost:9000
    depends_on:
      db:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped

  reservation-service:
    build: ./reservation-service
    ports:
      - "8003:8003"
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=db
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  media-service:
    build: ./media-service
    ports:
      - "8004:8004"
    env_file:
      - .env
    environment:
      - MINIO_HOST=minio:9000
      - EXTERNAL_MINIO_HOST=localhost:9000
    depends_on:
      minio:
        condition: service_healthy
    restart: unless-stopped

  otp-service:
    build: ./otp-service
    ports:
      - "8005:8005"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data: